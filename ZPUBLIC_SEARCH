入参 ：
IN_PERNR	TYPE	PERSNO	                     	对象标识
IN_DATA	TYPE	SY-DATUM	                     	ABAP 系统字段：应用服务器的当前日期 
IN_FLAG_YCQTS	TYPE	STRING	                     	是否查询应出勤天数标识 
IN_FLAG_RZRQ	TYPE	STRING	                     	是否查询入职日期标识
IN_FLAG_ICNUM	TYPE	STRING	                     	是否查询身份证号标识
IN_FLAG_GL	TYPE	STRING	                     	是否查询工龄标识
IN_FLAG_NJ	TYPE	STRING	                     	是否查询年假
IN_FLAG_CJGZSJ	TYPE	STRING	                     	参加工作时间
 
出参 ：
OUT_NACHN	TYPE	STRING	姓名
OUT_VORNA	TYPE	STRING	姓名拼音
OUT_SEX	TYPE	STRING	性别
OUT_AGE	TYPE	STRING	年龄
OUT_BUMEN	TYPE	STRING	部门
OUT_ZHIWEI	TYPE	STRING	职位
OUT_YCQTS	TYPE	I	应出勤天数 
OUT_RZRQ	TYPE	SY-DATUM	入职日期
OUT_CJGZSJ	TYPE	SY-DATUM	参加工作时间
OUT_ICNUM	TYPE	STRING	身份证号
OUT_GL	TYPE	STRING	工龄
OUT_NJ	TYPE	STRING	年假定额
OUT_NJSY	TYPE	STRING	剩余年假
OUT_QHBZ	TYPE	STRING	前后勤标志（1-前勤；2-后勤） 
OUT_MONS	TYPE	STRING	工龄（月数）
OUT_YEARS	TYPE	STRING	工龄（年数）
OUT_GLGZ	TYPE	STRING	工龄工资
OUT_PLANS	TYPE	STRING	职务
OUT_LZRQ	TYPE	SY-DATUM	离职日期
OUT_CJBZ	TYPE	STRING	残疾标志
FUNCTION ZPUBLIC_SEARCH.
*"----------------------------------------------------------------------
*"*"本地接口：
*"  IMPORTING
*"     REFERENCE(IN_PERNR) TYPE  PERSNO
*"     REFERENCE(IN_DATA) TYPE  SY-DATUM OPTIONAL
*"     REFERENCE(IN_FLAG_YCQTS) TYPE  STRING OPTIONAL
*"     REFERENCE(IN_FLAG_RZRQ) TYPE  STRING OPTIONAL
*"     REFERENCE(IN_FLAG_ICNUM) TYPE  STRING OPTIONAL
*"     REFERENCE(IN_FLAG_GL) TYPE  STRING OPTIONAL
*"     REFERENCE(IN_FLAG_NJ) TYPE  STRING OPTIONAL
*"     REFERENCE(IN_FLAG_CJGZSJ) TYPE  STRING OPTIONAL
*"  EXPORTING
*"     REFERENCE(OUT_NACHN) TYPE  STRING
*"     REFERENCE(OUT_VORNA) TYPE  STRING
*"     REFERENCE(OUT_SEX) TYPE  STRING
*"     REFERENCE(OUT_AGE) TYPE  STRING
*"     REFERENCE(OUT_BUMEN) TYPE  STRING
*"     REFERENCE(OUT_ZHIWEI) TYPE  STRING
*"     REFERENCE(OUT_YCQTS) TYPE  I
*"     REFERENCE(OUT_RZRQ) TYPE  SY-DATUM
*"     REFERENCE(OUT_CJGZSJ) TYPE  SY-DATUM
*"     REFERENCE(OUT_ICNUM) TYPE  STRING
*"     REFERENCE(OUT_GL) TYPE  STRING
*"     REFERENCE(OUT_NJ) TYPE  STRING
*"     REFERENCE(OUT_NJSY) TYPE  STRING
*"     REFERENCE(OUT_QHBZ) TYPE  STRING
*"     REFERENCE(OUT_MONS) TYPE  STRING
*"     REFERENCE(OUT_YEARS) TYPE  STRING
*"     REFERENCE(OUT_GLGZ) TYPE  STRING
*"     REFERENCE(OUT_PLANS) TYPE  STRING
*"     REFERENCE(OUT_LZRQ) TYPE  SY-DATUM
*"     REFERENCE(OUT_CJBZ) TYPE  STRING
*"----------------------------------------------------------------------
  DATA:BIRTHDAY TYPE SY-DATUM,YEAR_F LIKE SY-DATUM,YEAR_L LIKE SY-DATUM.
  DATA:LT_BEGDA  LIKE SY-DATUM,LT_ENDDA LIKE SY-DATUM,LAST_DATA LIKE SY-DATUM.
  DATA:LT_T552A LIKE TABLE OF T552A WITH HEADER LINE.
  DATA:TIMES(5),ZINDEX1 TYPE I VALUE 126,ZINDEX2 TYPE I VALUE 11,FIELD2 TYPE I,FIELD3 TYPE I.
  TABLES:T552A,P0041.

  IF IN_DATA IS NOT INITIAL.
    CALL FUNCTION 'FIMA_DATE_CREATE'
      EXPORTING
        I_DATE   = IN_DATA
        I_MONTHS = '-1'
      IMPORTING
        E_DATE   = LT_BEGDA.
    CONCATENATE LT_BEGDA+0(6) '24' INTO LT_BEGDA.
    CONCATENATE IN_DATA+0(6) '23' INTO LT_ENDDA.
    CONCATENATE IN_DATA+0(4) '1231' INTO LAST_DATA.
  ENDIF.

  SELECT SINGLE NACHN VORNA GESCH GBDAT INTO (OUT_NACHN ,OUT_VORNA,OUT_SEX,BIRTHDAY) FROM PA0002
    WHERE PERNR = IN_PERNR.
  IF OUT_SEX = '1'.
    OUT_SEX = '男'.
  ELSEIF OUT_SEX = '2'.
    OUT_SEX = '女'.
  ENDIF.
  OUT_AGE = SY-DATUM+0(4) -  BIRTHDAY+0(4) .
  IF SY-DATUM+4(4) LE BIRTHDAY+4(4).
    OUT_AGE = OUT_AGE - 1.
  ENDIF.
  "身份证号
  IF IN_FLAG_ICNUM IS NOT INITIAL.
    SELECT SINGLE ICNUM INTO OUT_ICNUM FROM PA0185              "身份证号
          WHERE ICTYP = '01' AND PERNR = IN_PERNR.
  ENDIF.
  "职位"部门
  IF IN_DATA IS NOT INITIAL.
    DATA:LT_PLANS LIKE PA0001-PLANS,LT_ORGEH LIKE PA0001-ORGEH.
    CLEAR: LT_PLANS,LT_ORGEH.
    SELECT SINGLE PLANS ORGEH INTO (LT_PLANS,LT_ORGEH) FROM PA0001 WHERE PERNR = IN_PERNR AND
      ( ( BEGDA <= LT_BEGDA AND ENDDA >= LT_ENDDA )
        OR ( BEGDA <= LT_BEGDA AND ENDDA >= LT_BEGDA ) OR ( BEGDA <= LT_ENDDA AND ENDDA >= LT_ENDDA ) ).
    SELECT SINGLE PLSTX INTO OUT_ZHIWEI FROM T528T WHERE PLANS = LT_PLANS
      AND SPRSL = '1' AND OTYPE = 'S'AND
      ( ( BEGDA <= LT_BEGDA AND ENDDA >= LT_ENDDA )
        OR ( BEGDA <= LT_BEGDA AND ENDDA >= LT_BEGDA ) OR ( BEGDA <= LT_ENDDA AND ENDDA >= LT_ENDDA ) )..
    SELECT SINGLE STEXT INTO OUT_BUMEN FROM HRP1000 WHERE OBJID = LT_ORGEH
      AND PLVAR = '01' AND OTYPE = 'O' AND
      ( ( BEGDA <= LT_BEGDA AND ENDDA >= LT_ENDDA )
        OR ( BEGDA <= LT_BEGDA AND ENDDA >= LT_BEGDA ) OR ( BEGDA <= LT_ENDDA AND ENDDA >= LT_ENDDA ) )..
    OUT_PLANS = LT_PLANS.
  ENDIF.
  "入职日期
  IF IN_FLAG_RZRQ IS NOT INITIAL.
    IF IN_DATA IS NOT INITIAL.
      SELECT SINGLE BEGDA INTO OUT_RZRQ FROM PA0000 WHERE         "入职日期
            BEGDA <= LT_ENDDA AND PERNR = IN_PERNR AND  MASSN = '12' .

      IF SY-SUBRC NE 0.
         SELECT SINGLE BEGDA INTO OUT_RZRQ FROM PA0000 WHERE         "入职日期
               BEGDA <= LT_ENDDA AND PERNR = IN_PERNR AND ( MASSN = '01'
               OR MASSN = '11'  OR MASSN = '14'OR MASSN = '18'OR MASSN = '19').
      ENDIF.
      SELECT SINGLE BEGDA INTO OUT_LZRQ FROM PA0000 WHERE         "离职日期
        BEGDA BETWEEN LT_BEGDA AND LT_ENDDA AND PERNR = IN_PERNR AND ( MASSN = '04').
    ENDIF.
  ENDIF.
  "参加工作时间
  IF IN_FLAG_CJGZSJ IS NOT INITIAL.
    FIELD-SYMBOLS:<AF>   TYPE P0041,<BF> TYPE ANY,  <DATA> TYPE ANY.
    DATA:ZINDEX     TYPE I,BQAGE LIKE SY-DATUM,
         YEAR       TYPE I, MONTH TYPE I,L_YEAR(5),L_MONTH(5).
    CLEAR:P0041,YEAR,MONTH,L_YEAR,L_MONTH.
    SELECT SINGLE * INTO CORRESPONDING FIELDS OF P0041 FROM PA0041 WHERE PERNR = IN_PERNR.
    ASSIGN P0041 TO <AF> CASTING.
    ZINDEX = 24.
    DO 12 TIMES.
      ZINDEX1 = ZINDEX + 1.
      ASSIGN COMPONENT ZINDEX OF STRUCTURE <AF> TO <BF>.
      ASSIGN COMPONENT ZINDEX1 OF STRUCTURE <AF> TO <DATA>.
      IF <BF> = 'Z3'.
        OUT_CJGZSJ = <DATA>.
        CLEAR: <BF>,<DATA>. EXIT.
      ENDIF.
      ZINDEX = ZINDEX + 2.
    ENDDO.
  ENDIF.
  "应出勤天数
  IF IN_FLAG_YCQTS = 'X'.
    IF IN_DATA IS NOT INITIAL.
      PERFORM CAL_YCQTS TABLES LT_T552A USING IN_DATA LT_BEGDA LT_ENDDA ZINDEX1 ZINDEX2 FIELD2
            FIELD3 OUT_YCQTS CHANGING T552A.
    ENDIF.
  ENDIF.
  "工龄
  IF IN_FLAG_GL IS NOT INITIAL.
*    SELECT SINGLE BEGDA INTO OUT_RZRQ FROM PA0000 WHERE         "入职日期
*            BEGDA <= LT_ENDDA AND PERNR = IN_PERNR AND ( MASSN = '01'
*            OR MASSN = '11' OR MASSN = '12' OR MASSN = '14'OR MASSN = '18'OR MASSN = '19').
      SELECT SINGLE BEGDA INTO OUT_RZRQ FROM PA0000 WHERE         "入职日期
            BEGDA <= LT_ENDDA AND PERNR = IN_PERNR AND  MASSN = '12' .

      IF SY-SUBRC NE 0.
         SELECT SINGLE BEGDA INTO OUT_RZRQ FROM PA0000 WHERE         "入职日期
               BEGDA <= LT_ENDDA AND PERNR = IN_PERNR AND ( MASSN = '01'
               OR MASSN = '11'  OR MASSN = '14'OR MASSN = '18'OR MASSN = '19').
      ENDIF.

    PERFORM CAL_GL USING OUT_RZRQ OUT_GL OUT_YEARS OUT_MONS OUT_GLGZ LT_ENDDA IN_PERNR CHANGING P0041.
  ENDIF.
  "年休假定额
  IF IN_FLAG_NJ IS NOT INITIAL.
    DATA:L_ANZHL LIKE PA2006-ANZHL,L_KVERB LIKE PA2006-KVERB.
    CONCATENATE IN_DATA+0(4) '0101' INTO YEAR_F.
    CONCATENATE IN_DATA+0(4) '1231' INTO YEAR_L.
    SELECT SINGLE ANZHL KVERB INTO (L_ANZHL,L_KVERB) FROM PA2006 WHERE
       BEGDA = YEAR_F AND ENDDA = YEAR_L AND PERNR = IN_PERNR AND KTART = '01'.
*    OUT_NJSY = OUT_NJ - OUT_NJSY.
    OUT_NJ = L_ANZHL. OUT_NJSY = L_ANZHL - L_KVERB.
  ENDIF.

  "前勤&后勤标志
  DATA: SCHKZ TYPE PA0007-SCHKZ.
  SELECT SINGLE SCHKZ INTO SCHKZ FROM PA0007 WHERE PERNR = IN_PERNR AND BEGDA <= LT_ENDDA AND ENDDA >= LT_BEGDA.
  CASE SCHKZ.
    WHEN 'N2'.
      OUT_QHBZ = '1'.
    WHEN 'N1' .
      OUT_QHBZ = '2'.
  ENDCASE.

  "残疾标志  PA0529-DISCL有值，且工资核算期间落在这个BEGDA和ENDDA内的标记为残疾人
  DATA: WA_PA0529 TYPE PA0529.
  CLEAR: WA_PA0529.
  SELECT SINGLE * INTO CORRESPONDING FIELDS OF WA_PA0529 FROM PA0529 WHERE PERNR = IN_PERNR AND BEGDA <= LT_ENDDA AND ENDDA >= LT_BEGDA.
  IF WA_PA0529-DISCL NE ''.
    OUT_CJBZ = 'X'.
  ENDIF.

ENDFUNCTION.
FORM CAL_GL USING OUT_RZRQ OUT_GL OUT_YEARS OUT_MONS OUT_GLGZ LT_ENDDA IN_PERNR CHANGING P0041.

  FIELD-SYMBOLS:<AF>   TYPE P0041,<BF> TYPE ANY,  <DATA> TYPE ANY.
  DATA:ZINDEX     TYPE I,ZINDEX1 TYPE I,BQAGE LIKE SY-DATUM,
       YEAR       TYPE I, MONTH TYPE I,L_YEAR(5),L_MONTH(5).
  CLEAR:P0041,YEAR,MONTH,L_YEAR,L_MONTH.
  SELECT SINGLE * INTO CORRESPONDING FIELDS OF P0041 FROM PA0041 WHERE PERNR = IN_PERNR AND BEGDA <= LT_ENDDA AND ENDDA >= LT_ENDDA.
  ASSIGN P0041 TO <AF> CASTING.
  ZINDEX = 24.
  DO 12 TIMES.
    ZINDEX1 = ZINDEX + 1.
    ASSIGN COMPONENT ZINDEX OF STRUCTURE <AF> TO <BF>.
    ASSIGN COMPONENT ZINDEX1 OF STRUCTURE <AF> TO <DATA>.
    IF <BF> = 'Z2'.
      BQAGE = <DATA>.
      CLEAR: <BF>,<DATA>. EXIT.
    ENDIF.
    ZINDEX = ZINDEX + 2.
  ENDDO.
  IF BQAGE IS NOT INITIAL.
    CALL FUNCTION 'FIMA_DAYS_AND_MONTHS_AND_YEARS'
      EXPORTING
        I_DATE_FROM    = BQAGE
*       I_KEY_DAY_FROM =
        I_DATE_TO      = SY-DATUM
*       I_KEY_DAY_TO   =
        I_FLG_SEPARATE = 'X'
      IMPORTING
*       e_days         =
        E_MONTHS       = MONTH
        E_YEARS        = YEAR.
    L_YEAR = YEAR. L_MONTH = MONTH. CONDENSE:L_YEAR,L_MONTH.
    CONCATENATE L_YEAR '年' L_MONTH '月' INTO OUT_GL.
*    IF YEAR IS INITIAL.
*      RESULT_ITEM-BET3002 = 10.
*    ELSE.
*      YEAR = YEAR + 1.
*      RESULT_ITEM-BET3002 = YEAR * 10.
*    ENDIF.
    YEAR = LT_ENDDA+0(4) - BQAGE+0(4) + 1.
    OUT_GLGZ = YEAR * 10.
  ELSE.
    "2016-03-08注释，入职日期的【工龄药费 】计算
*    CALL FUNCTION 'FIMA_DAYS_AND_MONTHS_AND_YEARS'
*      EXPORTING
*        I_DATE_FROM    = OUT_RZRQ
**       I_KEY_DAY_FROM =
*        I_DATE_TO      = SY-DATUM
**       I_KEY_DAY_TO   =
*        I_FLG_SEPARATE = 'X'
*      IMPORTING
**       e_days         =
*        E_MONTHS       = MONTH
*        E_YEARS        = YEAR.
*    L_YEAR = YEAR. L_MONTH = MONTH. CONDENSE:L_YEAR,L_MONTH.
*    CONCATENATE L_YEAR '年' L_MONTH '月' INTO OUT_GL.
**    IF YEAR IS INITIAL.
**      RESULT_ITEM-BET3002 = 10.
**    ELSE.
**      YEAR = YEAR + 1.
**      RESULT_ITEM-BET3002 = YEAR * 10.
**    ENDIF.
*    YEAR = LT_ENDDA+0(4) - OUT_RZRQ+0(4) + 1.
*    OUT_GLGZ = YEAR * 10.
  ENDIF.
  OUT_YEARS = YEAR.
  OUT_MONS = MONTH.
*  FIELD-SYMBOLS:<AF>   TYPE P0041,<BF> TYPE ANY,  <DATA> TYPE ANY.
*  DATA:ZINDEX     TYPE I,ZINDEX1 TYPE I,BQAGE LIKE SY-DATUM,
*       YEAR       TYPE I, MONTH TYPE I,L_YEAR(5),L_MONTH(5).
*  CLEAR:P0041.
*  SELECT SINGLE * INTO P0041 FROM PA0041 WHERE PERNR = IN_PERNR.
*  ASSIGN P0041 TO <AF> CASTING.
*  ZINDEX = 24.
*  DO 12 TIMES.
*    ZINDEX1 = ZINDEX + 1.
*    ASSIGN COMPONENT ZINDEX OF STRUCTURE <AF> TO <BF>.
*    ASSIGN COMPONENT ZINDEX1 OF STRUCTURE <AF> TO <DATA>.
*    IF <BF> = 'Z2'.
*      BQAGE = <DATA>.
*      CLEAR: <BF>,<DATA>. EXIT.
*    ENDIF.
*    ZINDEX = ZINDEX + 2.
*  ENDDO.
*  IF BQAGE IS NOT INITIAL.
*    CALL FUNCTION 'FIMA_DAYS_AND_MONTHS_AND_YEARS'
*      EXPORTING
*        I_DATE_FROM    = BQAGE
**       I_KEY_DAY_FROM =
*        I_DATE_TO      = SY-DATUM
**       I_KEY_DAY_TO   =
*        I_FLG_SEPARATE = 'X'
*      IMPORTING
**       e_days         =
*        E_MONTHS       = MONTH
*        E_YEARS        = YEAR.
*    L_YEAR = YEAR. L_MONTH = MONTH. CONDENSE:L_YEAR,L_MONTH.
*    CONCATENATE L_YEAR '年' L_MONTH '月' INTO OUT_GL.
*  ELSE.
*    CALL FUNCTION 'FIMA_DAYS_AND_MONTHS_AND_YEARS'
*      EXPORTING
*        I_DATE_FROM    = OUT_RZRQ
**       I_KEY_DAY_FROM =
*        I_DATE_TO      = SY-DATUM
**       I_KEY_DAY_TO   =
*        I_FLG_SEPARATE = 'X'
*      IMPORTING
**       e_days         =
*        E_MONTHS       = MONTH
*        E_YEARS        = YEAR.
*    L_YEAR = YEAR. L_MONTH = MONTH. CONDENSE:L_YEAR,L_MONTH.
*    CONCATENATE L_YEAR '年' L_MONTH '月' INTO OUT_GL.
*    OUT_YEARS = YEAR.
*    OUT_MONS = ( YEAR * 12 ) + MONTH.
*  ENDIF.
ENDFORM.

FORM CAL_YCQTS TABLES LT_T552A USING IN_DATA LT_BEGDA LT_ENDDA ZINDEX1 ZINDEX2 FIELD2 FIELD3
     OUT_YCQTS CHANGING T552A.
  FIELD-SYMBOLS:<TABLE>  TYPE T552A, <FIELD1> TYPE ANY,<FIELD2> TYPE ANY,<FIELD3> TYPE ANY.
  ASSIGN T552A TO <TABLE> CASTING.

  DATA:L_GJAHR TYPE GJAHR.

  IF LT_BEGDA+0(4) <> LT_ENDDA+0(4).
    L_GJAHR = IN_DATA+0(4) - 1.
    SELECT * INTO CORRESPONDING FIELDS OF TABLE LT_T552A FROM T552A WHERE SCHKZ = 'N1'
      AND ( ( KJAHR = L_GJAHR AND MONAT = LT_BEGDA+4(2) ) OR ( KJAHR = IN_DATA+0(4) AND MONAT = LT_ENDDA+4(2) ) ).
  ELSE.
    SELECT * INTO CORRESPONDING FIELDS OF TABLE LT_T552A FROM T552A WHERE SCHKZ = 'N1'
      AND KJAHR = IN_DATA+0(4) AND ( MONAT = LT_BEGDA+4(2) OR MONAT = LT_ENDDA+4(2) ).
  ENDIF.

  LOOP AT LT_T552A INTO <TABLE>.
    IF SY-TABIX = 1.
      DO 8 TIMES.
        ASSIGN COMPONENT ZINDEX1 OF STRUCTURE <TABLE> TO <FIELD1>.
        FIELD2 = ZINDEX1 + 1.
        ASSIGN COMPONENT FIELD2 OF STRUCTURE <TABLE> TO <FIELD2>.
        FIELD3 = ZINDEX1 + 2.
        ASSIGN COMPONENT FIELD3 OF STRUCTURE <TABLE> TO <FIELD3>.
        IF <FIELD1> = 'WORK' AND <FIELD2> <> '1' AND <FIELD3> <> '1'.
          OUT_YCQTS = OUT_YCQTS + 1.
        ENDIF.
        ZINDEX1 = ZINDEX1 + 5.
      ENDDO.
    ELSEIF SY-TABIX = 2.
      DO 23 TIMES.
        ASSIGN COMPONENT ZINDEX2 OF STRUCTURE <TABLE> TO <FIELD1>.
        FIELD2 = ZINDEX2 + 1.
        ASSIGN COMPONENT FIELD2 OF STRUCTURE <TABLE> TO <FIELD2>.
        FIELD3 = ZINDEX2 + 2.
        ASSIGN COMPONENT FIELD3 OF STRUCTURE <TABLE> TO <FIELD3>.
        IF <FIELD1> = 'WORK' AND <FIELD2> <> '1' AND <FIELD3> <> '1'.
          OUT_YCQTS = OUT_YCQTS + 1.
        ENDIF.
        ZINDEX2 = ZINDEX2 + 5.
      ENDDO.
    ENDIF.
  ENDLOOP.
ENDFORM.
