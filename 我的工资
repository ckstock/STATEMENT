FUNCTION ZHCM_WECHAT_008.
*"----------------------------------------------------------------------
*"*"本地接口：
*"  IMPORTING
*"     VALUE(IN_PERNR) TYPE  PERSNO
*"     VALUE(IN_DATE) TYPE  SYDATUM OPTIONAL
*"     VALUE(IN_YEAR) TYPE  GJAHR OPTIONAL
*"  TABLES
*"      RESULT_PY01 STRUCTURE  ZAPP_PY
*"----------------------------------------------------------------------
  DATA : LT_BEGDA LIKE SY-DATUM,LT_ENDDA LIKE SY-DATUM.
  DATA:BEGIN OF T_RGDIR OCCURS 0.
      INCLUDE STRUCTURE PC261.
  DATA: END OF T_RGDIR.
  DATA:G_NUMBER LIKE PC261-SEQNR.
  DATA:G_RESULT TYPE PAYCN_RESULT.
  DATA:LT_RT TYPE LINE OF HRPAY99_RT.

  DATA:L_BNKSA LIKE PA0009-BNKSA,L_ZLSCH LIKE PA0009-ZLSCH,
       L_BKREF LIKE PA0009-BKREF.

  DATA:LT_ZAPP_PY LIKE TABLE OF ZAPP_PY WITH HEADER LINE .

  CONCATENATE IN_DATE+0(6) '01' INTO LT_BEGDA.
  CALL FUNCTION 'DATE_GET_MONTH_LASTDAY'
    EXPORTING
      I_DATE = IN_DATE
    IMPORTING
      E_DATE = LT_ENDDA.
  CLEAR:T_RGDIR,T_RGDIR[],L_BNKSA,L_ZLSCH,L_BKREF.

  CALL FUNCTION 'CU_READ_RGDIR'
    EXPORTING
      PERSNR             = IN_PERNR
      NO_AUTHORITY_CHECK = 'X'
    TABLES
      IN_RGDIR           = T_RGDIR
    EXCEPTIONS
      NO_RECORD_FOUND    = 1
      OTHERS             = 2.
*********苍老师需求  没工资数据的给返回一条值
  IF SY-SUBRC <> 0.
*    RESULT_PY01-PERNR = '0'.
*    RESULT_PY01-BET559 = '0'.
*    APPEND RESULT_PY01.CLEAR RESULT_PY01.
    APPEND INITIAL LINE TO RESULT_PY01.
  ELSE.

  ENDIF.
  CHECK SY-SUBRC = 0.

  RESULT_PY01-PERNR = IN_PERNR.   "员工编号

  SELECT SINGLE NACHN INTO RESULT_PY01-NACHN FROM PA0002 WHERE PERNR = IN_PERNR. "姓名

  SELECT SINGLE WERKS INTO RESULT_PY01-FLAG5 FROM PA0001 WHERE PERNR = IN_PERNR AND BEGDA <= SY-DATUM AND ENDDA >= SY-DATUM.
  CONDENSE RESULT_PY01-FLAG5.

  SELECT SINGLE BNKSA ZLSCH BKREF INTO (L_BNKSA,L_ZLSCH,L_BKREF) FROM PA0009
           WHERE PERNR = IN_PERNR AND BEGDA <= LT_BEGDA AND ENDDA >= LT_ENDDA.
  IF L_BNKSA = 0 AND L_ZLSCH = 'T'.
    RESULT_PY01-BKREF = L_BKREF.
  ELSEIF L_BNKSA = 0 AND L_ZLSCH = 'E'.
    RESULT_PY01-BKREF = '现金支付'.
  ENDIF.

  DATA:LT_ZDFJNBL LIKE TABLE OF ZDFJNBL WITH HEADER LINE .
  SELECT * INTO CORRESPONDING FIELDS OF TABLE LT_ZDFJNBL FROM ZDFJNBL.
  DATA:L_101  TYPE ANSAL,L_559 TYPE ANSAL,L_7000 TYPE ANSAL,L_7010 TYPE ANSAL.
  DATA:RQ TYPE DATS.
  LOOP AT T_RGDIR WHERE FPPER  = '000000' AND INPER  =  '000000'.
    G_NUMBER = T_RGDIR-SEQNR.
    CALL FUNCTION 'PYXX_READ_PAYROLL_RESULT'
      EXPORTING
        CLUSTERID                    = 'CN'
        EMPLOYEENUMBER               = IN_PERNR
        SEQUENCENUMBER               = G_NUMBER
        CHECK_READ_AUTHORITY         = ''
      CHANGING
        PAYROLL_RESULT               = G_RESULT
      EXCEPTIONS
        ILLEGAL_ISOCODE_OR_CLUSTERID = 1
        ERROR_GENERATING_IMPORT      = 2
        IMPORT_MISMATCH_ERROR        = 3
        SUBPOOL_DIR_FULL             = 4
        NO_READ_AUTHORITY            = 5
        NO_RECORD_FOUND              = 6
        VERSIONS_DO_NOT_MATCH        = 7
        ERROR_READING_ARCHIVE        = 8
        ERROR_READING_RELID          = 9
        OTHERS                       = 10.
    CHECK SY-SUBRC = 0.                                    "判断函数是否执行成功
    IF IN_YEAR IS NOT INITIAL.
      IF  T_RGDIR-IPEND+0(4) = IN_YEAR. "所在期间结束
        RQ = T_RGDIR-IPEND.
        CALL FUNCTION 'FIMA_DATE_CREATE'
          EXPORTING
            I_DATE   = RQ
            I_MONTHS = -1
          IMPORTING
            E_DATE   = RQ.
        LOOP AT G_RESULT-INTER-RT INTO LT_RT .
          CASE LT_RT-LGART.
            WHEN '/101'.
              L_101 = ABS( LT_RT-BETRG ).
            WHEN '/559'.
              L_559 = ABS( LT_RT-BETRG ).
            WHEN '7000'.
              L_7000 = ABS( LT_RT-BETRG ).
            WHEN '7010'.
              L_7010 = ABS( LT_RT-BETRG ).
          ENDCASE.
        ENDLOOP.
      ENDIF.
    ELSE.
      RQ = T_RGDIR-IPEND.
      CALL FUNCTION 'FIMA_DATE_CREATE'
        EXPORTING
          I_DATE   = RQ
          I_MONTHS = -1
        IMPORTING
          E_DATE   = RQ.

      IF RQ+0(6) = IN_DATE+0(6). "所在期间结束.

        LOOP AT G_RESULT-INTER-RT INTO LT_RT .
          CASE LT_RT-LGART.
            WHEN '/101'.
              L_101 = ABS( LT_RT-BETRG ).
            WHEN '/559'.
              L_559 = ABS( LT_RT-BETRG ).
            WHEN '7000'.
              L_7000 = ABS( LT_RT-BETRG ).
            WHEN '7010'.
              L_7010 = ABS( LT_RT-BETRG ).
          ENDCASE.
        ENDLOOP.
      ENDIF.
    ENDIF.
  ENDLOOP.

  IF IN_YEAR IS NOT INITIAL.

    LOOP AT T_RGDIR WHERE FPPER+0(4) = IN_YEAR.
      CHECK T_RGDIR-FPPER IS NOT INITIAL.
      CHECK T_RGDIR-INPER IS NOT INITIAL.
      G_NUMBER = T_RGDIR-SEQNR.
      CALL FUNCTION 'PYXX_READ_PAYROLL_RESULT'
        EXPORTING
          CLUSTERID                    = 'CN'
          EMPLOYEENUMBER               = IN_PERNR
          SEQUENCENUMBER               = G_NUMBER
          CHECK_READ_AUTHORITY         = ''
        CHANGING
          PAYROLL_RESULT               = G_RESULT
        EXCEPTIONS
          ILLEGAL_ISOCODE_OR_CLUSTERID = 1
          ERROR_GENERATING_IMPORT      = 2
          IMPORT_MISMATCH_ERROR        = 3
          SUBPOOL_DIR_FULL             = 4
          NO_READ_AUTHORITY            = 5
          NO_RECORD_FOUND              = 6
          VERSIONS_DO_NOT_MATCH        = 7
          ERROR_READING_ARCHIVE        = 8
          ERROR_READING_RELID          = 9
          OTHERS                       = 10.
      CHECK SY-SUBRC = 0.                                    "判断函数是否执行成功
      LOOP AT G_RESULT-INTER-RT INTO LT_RT .
        CASE LT_RT-LGART.
          WHEN '1000'.
            RESULT_PY01-BET1000 = ABS( LT_RT-BETRG ).
          WHEN '1010'.
            RESULT_PY01-BET1010 = ABS( LT_RT-BETRG ).
          WHEN '2000'.
            RESULT_PY01-BET2000 = ABS( LT_RT-BETRG ).
          WHEN '2010'.
            RESULT_PY01-BET2010 = ABS( LT_RT-BETRG ).
          WHEN '2020'.
            RESULT_PY01-BET2020 = ABS( LT_RT-BETRG ).
          WHEN '2030'.
            RESULT_PY01-BET2030 = ABS( LT_RT-BETRG ).
          WHEN '3000'.
            RESULT_PY01-BET3000 = ABS( LT_RT-BETRG ).
          WHEN '3010'.
            RESULT_PY01-BET3010 = ABS( LT_RT-BETRG ).
          WHEN '3020'.
            RESULT_PY01-BET3020 = ABS( LT_RT-BETRG ).
          WHEN '3090'.
            RESULT_PY01-BET3090 = ABS( LT_RT-BETRG ).
          WHEN '3091'.
            RESULT_PY01-BET3091 = ABS( LT_RT-BETRG ).
          WHEN '4000'.
            RESULT_PY01-BET4000 = ABS( LT_RT-BETRG ).
          WHEN '4001'.
            RESULT_PY01-BET4001 = ABS( LT_RT-BETRG ).
          WHEN '4010'.
            RESULT_PY01-BET4010 = ABS( LT_RT-BETRG ).
          WHEN '4020'.
            RESULT_PY01-BET4020 = ABS( LT_RT-BETRG ).
          WHEN '4030'.
            RESULT_PY01-BET4030 = ABS( LT_RT-BETRG ).
          WHEN '4040'.
            RESULT_PY01-BET4040 = ABS( LT_RT-BETRG ).
          WHEN '5000'.
            RESULT_PY01-BET5000 = ABS( LT_RT-BETRG ).
          WHEN '5010'.
            RESULT_PY01-BET5010 = ABS( LT_RT-BETRG ).
          WHEN '6031'.
            RESULT_PY01-BET6031 = ABS( LT_RT-BETRG ).

          WHEN '6032'.
            RESULT_PY01-BET6032 = ABS( LT_RT-BETRG ).
          WHEN '6033'.
            RESULT_PY01-BET6033 = ABS( LT_RT-BETRG ).
          WHEN '6034'.
            RESULT_PY01-BET6034 = ABS( LT_RT-BETRG ).
          WHEN '6035'.
            RESULT_PY01-BET6035 = ABS( LT_RT-BETRG ).
          WHEN '6036'.
            RESULT_PY01-BET6036 = ABS( LT_RT-BETRG ).
          WHEN '6037'.
            RESULT_PY01-BET6037 = ABS( LT_RT-BETRG ).
          WHEN '6038'.
            RESULT_PY01-BET6038 = ABS( LT_RT-BETRG ).
          WHEN  '6041'.
            RESULT_PY01-BET6041 = ABS( LT_RT-BETRG ).
          WHEN '6042'.
            RESULT_PY01-BET6042 = ABS( LT_RT-BETRG ).
          WHEN '5020'.
            RESULT_PY01-BET5020 = ABS( LT_RT-BETRG ).
          WHEN '6000'.
            RESULT_PY01-BET6000 = ABS( LT_RT-BETRG ).
          WHEN '6001'.
            RESULT_PY01-BET6001 = ABS( LT_RT-BETRG ).
          WHEN '6002'.
            RESULT_PY01-BET6002 = ABS( LT_RT-BETRG ).
          WHEN '6003'.
            RESULT_PY01-BET6003 = ABS( LT_RT-BETRG ).
          WHEN '6004'.
            RESULT_PY01-BET6004 = ABS( LT_RT-BETRG ).
          WHEN '6005'.
            RESULT_PY01-BET6005 = ABS( LT_RT-BETRG ).

          WHEN '6010'.
            RESULT_PY01-BET6010 = ABS( LT_RT-BETRG ).
          WHEN '6020'.
            RESULT_PY01-BET6020 = ABS( LT_RT-BETRG ).
          WHEN '7000'.
            RESULT_PY01-BET7000 = ABS( LT_RT-BETRG ).
          WHEN '7010'.
            RESULT_PY01-BET7010 = ABS( LT_RT-BETRG ).
          WHEN '/313'.
            RESULT_PY01-BET313 = ABS( LT_RT-BETRG ).
          WHEN '/314'.
            RESULT_PY01-BET314 = ABS( LT_RT-BETRG ).
          WHEN '/323'.
            RESULT_PY01-BET323 = ABS( LT_RT-BETRG ).
          WHEN '/324'.
            RESULT_PY01-BET324 = ABS( LT_RT-BETRG ).
          WHEN '/333'.
            RESULT_PY01-BET333 = ABS( LT_RT-BETRG ).
          WHEN '/334'.
            RESULT_PY01-BET334 = ABS( LT_RT-BETRG ).
          WHEN '/334'.
            RESULT_PY01-BET334 = ABS( LT_RT-BETRG ).
          WHEN '/343'.
            RESULT_PY01-BET343 = ABS( LT_RT-BETRG ).
          WHEN '/344'.
            RESULT_PY01-BET344 = ABS( LT_RT-BETRG ).
          WHEN '/353'.
            RESULT_PY01-BET353 = ABS( LT_RT-BETRG ).
          WHEN '/354'.
            RESULT_PY01-BET354 = ABS( LT_RT-BETRG ).
          WHEN '/362'.
            RESULT_PY01-BET362 = ABS( LT_RT-BETRG ).
          WHEN '/363'.
            RESULT_PY01-BET363 = ABS( LT_RT-BETRG ).
          WHEN '/391'.
            RESULT_PY01-BET391 = ABS( LT_RT-BETRG ).
          WHEN '/403'.
            RESULT_PY01-BET403 = ABS( LT_RT-BETRG ).
          WHEN '/404'.
            RESULT_PY01-BET404 = ABS( LT_RT-BETRG ).

          WHEN '/559'.
            RESULT_PY01-BET559 = ABS( LT_RT-BETRG ).
          WHEN '/560'.
            RESULT_PY01-BET560 = ABS( LT_RT-BETRG ).
          WHEN '/101'.
            RESULT_PY01-BET101 = ABS( LT_RT-BETRG ).
*            -------------------王倩新加工资项
          WHEN '3030'.
            RESULT_PY01-BET3030 = ABS( LT_RT-BETRG ).
          WHEN '3081'.
            RESULT_PY01-BET3081 = ABS( LT_RT-BETRG ).
          WHEN '3082'.
            RESULT_PY01-BET3082 = ABS( LT_RT-BETRG ).
          WHEN '/180'.
            RESULT_PY01-BET180 = ABS( LT_RT-BETRG ).
          WHEN '6043'.
            RESULT_PY01-BET6043 = ABS( LT_RT-BETRG ).
          WHEN '6044'.
            RESULT_PY01-BET6044 = ABS( LT_RT-BETRG ).
          WHEN '/408'.
            RESULT_PY01-BET408 = ABS( LT_RT-BETRG ).
          WHEN '/I01'.
            RESULT_PY01-BETI01 = ABS( LT_RT-BETRG ).
*            -------------------王倩新加工资项
            CONDENSE RESULT_PY01-FLAG4.
          WHEN OTHERS.
        ENDCASE.
      ENDLOOP.
      RESULT_PY01-BET101 = RESULT_PY01-BET101 + L_101.
      RESULT_PY01-BET559 = RESULT_PY01-BET559 + L_559.
      RESULT_PY01-BET7000 =   L_7000.
      RESULT_PY01-BET7000 =   L_7010.
      APPEND RESULT_PY01. CLEAR RESULT_PY01.
    ENDLOOP.

    LT_ZAPP_PY[] = RESULT_PY01[].

    CLEAR:RESULT_PY01,RESULT_PY01[].
    READ TABLE LT_ZAPP_PY INDEX 1.
    IF SY-SUBRC = 0.
      RESULT_PY01-PERNR = LT_ZAPP_PY-PERNR.
      RESULT_PY01-FLAG1 = LT_ZAPP_PY-FLAG1.
      RESULT_PY01-NACHN = LT_ZAPP_PY-NACHN.
      RESULT_PY01-BKREF = LT_ZAPP_PY-BKREF.
      RESULT_PY01-FLAG5 = LT_ZAPP_PY-FLAG5.
    ENDIF.

    LOOP AT LT_ZAPP_PY.
      RESULT_PY01-BET3030 = LT_ZAPP_PY-BET3030 + RESULT_PY01-BET3030.
      RESULT_PY01-BET3081 = LT_ZAPP_PY-BET3081 + RESULT_PY01-BET3081.
      RESULT_PY01-BET3082 = LT_ZAPP_PY-BET3082 + RESULT_PY01-BET3082.
      RESULT_PY01-BET180 = LT_ZAPP_PY-BET180 + RESULT_PY01-BET180.
      RESULT_PY01-BET6043 = LT_ZAPP_PY-BET6043 + RESULT_PY01-BET6043.
      RESULT_PY01-BET6044 = LT_ZAPP_PY-BET6044 + RESULT_PY01-BET6044.
      RESULT_PY01-BET408 = LT_ZAPP_PY-BET408 + RESULT_PY01-BET408.
      RESULT_PY01-BETI01 = LT_ZAPP_PY-BETI01 + RESULT_PY01-BETI01.


      RESULT_PY01-BET1000 = LT_ZAPP_PY-BET1000 + RESULT_PY01-BET1000.
      RESULT_PY01-BET1010 = LT_ZAPP_PY-BET1010 + RESULT_PY01-BET1010.
      RESULT_PY01-BET2000 = LT_ZAPP_PY-BET2000 + RESULT_PY01-BET2000.
      RESULT_PY01-BET2010 = LT_ZAPP_PY-BET2010 + RESULT_PY01-BET2010.
      RESULT_PY01-BET2020 = LT_ZAPP_PY-BET2020 + RESULT_PY01-BET2020.
      RESULT_PY01-BET2030 = LT_ZAPP_PY-BET2030 + RESULT_PY01-BET2030.
      RESULT_PY01-BET3000 = LT_ZAPP_PY-BET3000 + RESULT_PY01-BET3000.
      RESULT_PY01-BET3010 = LT_ZAPP_PY-BET3010 + RESULT_PY01-BET3010.
      RESULT_PY01-BET3020 = LT_ZAPP_PY-BET3020 + RESULT_PY01-BET3020.
      RESULT_PY01-BET3080 = LT_ZAPP_PY-BET3080 + RESULT_PY01-BET3080.
      RESULT_PY01-BET3090 = LT_ZAPP_PY-BET3090 + RESULT_PY01-BET3090.
      RESULT_PY01-BET3091 = LT_ZAPP_PY-BET3091 + RESULT_PY01-BET3091.
      RESULT_PY01-BET4000 = LT_ZAPP_PY-BET4000 + RESULT_PY01-BET4000.
      RESULT_PY01-BET4001 = LT_ZAPP_PY-BET4001 + RESULT_PY01-BET4001.
      RESULT_PY01-BET4010 = LT_ZAPP_PY-BET4010 + RESULT_PY01-BET4010.
      RESULT_PY01-BET4020 = LT_ZAPP_PY-BET4020 + RESULT_PY01-BET4020.
      RESULT_PY01-BET4030 = LT_ZAPP_PY-BET4030 + RESULT_PY01-BET4030.
      RESULT_PY01-BET4040 = LT_ZAPP_PY-BET4040 + RESULT_PY01-BET4040.
      RESULT_PY01-BET5000 = LT_ZAPP_PY-BET5000 + RESULT_PY01-BET5000.
      RESULT_PY01-BET5010 = LT_ZAPP_PY-BET5010 + RESULT_PY01-BET5010.
      RESULT_PY01-BET6031 = LT_ZAPP_PY-BET6031 + RESULT_PY01-BET6031.
      RESULT_PY01-BET6032 = LT_ZAPP_PY-BET6032 + RESULT_PY01-BET6032.
      RESULT_PY01-BET6033 = LT_ZAPP_PY-BET6033 + RESULT_PY01-BET6033.
      RESULT_PY01-BET6034 = LT_ZAPP_PY-BET6034 + RESULT_PY01-BET6034.
      RESULT_PY01-BET6035 = LT_ZAPP_PY-BET6035 + RESULT_PY01-BET6035.
      RESULT_PY01-BET6036 = LT_ZAPP_PY-BET6036 + RESULT_PY01-BET6036.
      RESULT_PY01-BET6037 = LT_ZAPP_PY-BET6037 + RESULT_PY01-BET6037.
      RESULT_PY01-BET6038 = LT_ZAPP_PY-BET6038 + RESULT_PY01-BET6038.
      RESULT_PY01-BET6041 = LT_ZAPP_PY-BET6041 + RESULT_PY01-BET6041.
      RESULT_PY01-BET6042 = LT_ZAPP_PY-BET6042 + RESULT_PY01-BET6042.
      RESULT_PY01-BET5020 = LT_ZAPP_PY-BET5020 + RESULT_PY01-BET5020.
      RESULT_PY01-BET6000 = LT_ZAPP_PY-BET6000 + RESULT_PY01-BET6000.
      RESULT_PY01-BET6001 = LT_ZAPP_PY-BET6001 + RESULT_PY01-BET6001.
      RESULT_PY01-BET6002 = LT_ZAPP_PY-BET6002 + RESULT_PY01-BET6002.
      RESULT_PY01-BET6003 = LT_ZAPP_PY-BET6003 + RESULT_PY01-BET6003.
      RESULT_PY01-BET6004 = LT_ZAPP_PY-BET6004 + RESULT_PY01-BET6004.
      RESULT_PY01-BET6005 = LT_ZAPP_PY-BET6005 + RESULT_PY01-BET6005.
      RESULT_PY01-BET6010 = LT_ZAPP_PY-BET6010 + RESULT_PY01-BET6010.
      RESULT_PY01-BET6020 = LT_ZAPP_PY-BET6020 + RESULT_PY01-BET6020.
      RESULT_PY01-BET7000 = LT_ZAPP_PY-BET7000 + RESULT_PY01-BET7000.
      RESULT_PY01-BET7010 = LT_ZAPP_PY-BET7010 + RESULT_PY01-BET7010.
      RESULT_PY01-BET313 = LT_ZAPP_PY-BET313 + RESULT_PY01-BET313.
      RESULT_PY01-BET314 = LT_ZAPP_PY-BET314 + RESULT_PY01-BET314.
      RESULT_PY01-BET323 = LT_ZAPP_PY-BET323 + RESULT_PY01-BET323.
      RESULT_PY01-BET324 = LT_ZAPP_PY-BET324 + RESULT_PY01-BET324.
      RESULT_PY01-BET333 = LT_ZAPP_PY-BET333 + RESULT_PY01-BET333.
      RESULT_PY01-BET324 = LT_ZAPP_PY-BET324 + RESULT_PY01-BET324.
      RESULT_PY01-BET343 = LT_ZAPP_PY-BET343 + RESULT_PY01-BET343.
      RESULT_PY01-BET344 = LT_ZAPP_PY-BET344 + RESULT_PY01-BET344.
      RESULT_PY01-BET353 = LT_ZAPP_PY-BET353 + RESULT_PY01-BET353.
      RESULT_PY01-BET354 = LT_ZAPP_PY-BET354 + RESULT_PY01-BET354.
      RESULT_PY01-BET362 = LT_ZAPP_PY-BET362 + RESULT_PY01-BET362.
      RESULT_PY01-BET363 = LT_ZAPP_PY-BET363 + RESULT_PY01-BET363.
      RESULT_PY01-BET391 = LT_ZAPP_PY-BET391 + RESULT_PY01-BET391.
      RESULT_PY01-BET403 = LT_ZAPP_PY-BET403 + RESULT_PY01-BET403.
      RESULT_PY01-BET404 = LT_ZAPP_PY-BET404 + RESULT_PY01-BET404.
      RESULT_PY01-BET559 = LT_ZAPP_PY-BET559 + RESULT_PY01-BET559.
      RESULT_PY01-BET560 = LT_ZAPP_PY-BET560 + RESULT_PY01-BET560.
      RESULT_PY01-BET101 = LT_ZAPP_PY-BET101 + RESULT_PY01-BET101.


      RESULT_PY01-FLAG4  = LT_ZAPP_PY-FLAG4 + RESULT_PY01-FLAG4.
    ENDLOOP.
    CONDENSE:RESULT_PY01-FLAG4,RESULT_PY01-FLAG5.
    APPEND RESULT_PY01.CLEAR RESULT_PY01.

  ELSE.


*    LOOP AT T_RGDIR WHERE FPBEG+0(6) = IN_DATE+0(6).

    LOOP AT T_RGDIR WHERE FPPER = IN_DATE+0(6).
      CHECK T_RGDIR-FPPER IS NOT INITIAL.
      CHECK T_RGDIR-INPER IS NOT INITIAL.
      G_NUMBER = T_RGDIR-SEQNR.
      CALL FUNCTION 'PYXX_READ_PAYROLL_RESULT'
        EXPORTING
          CLUSTERID                    = 'CN'
          EMPLOYEENUMBER               = IN_PERNR
          SEQUENCENUMBER               = G_NUMBER
          CHECK_READ_AUTHORITY         = ''
        CHANGING
          PAYROLL_RESULT               = G_RESULT
        EXCEPTIONS
          ILLEGAL_ISOCODE_OR_CLUSTERID = 1
          ERROR_GENERATING_IMPORT      = 2
          IMPORT_MISMATCH_ERROR        = 3
          SUBPOOL_DIR_FULL             = 4
          NO_READ_AUTHORITY            = 5
          NO_RECORD_FOUND              = 6
          VERSIONS_DO_NOT_MATCH        = 7
          ERROR_READING_ARCHIVE        = 8
          ERROR_READING_RELID          = 9
          OTHERS                       = 10.
      CHECK SY-SUBRC = 0.                                    "判断函数是否执行成功

      LOOP AT G_RESULT-INTER-RT INTO LT_RT .
        CASE LT_RT-LGART.
*            -------------------王倩新加工资项
          WHEN '3030'.
            RESULT_PY01-BET3030 = ABS( LT_RT-BETRG ).
          WHEN '3081'.
            RESULT_PY01-BET3081 = ABS( LT_RT-BETRG ).
          WHEN '3082'.
            RESULT_PY01-BET3082 = ABS( LT_RT-BETRG ).
          WHEN '/180'.
            RESULT_PY01-BET180 = ABS( LT_RT-BETRG ).
          WHEN '6043'.
            RESULT_PY01-BET6043 = ABS( LT_RT-BETRG ).
          WHEN '6044'.
            RESULT_PY01-BET6044 = ABS( LT_RT-BETRG ).
          WHEN '/408'.
            RESULT_PY01-BET408 = ABS( LT_RT-BETRG ).
          WHEN '/I01'.
            RESULT_PY01-BETI01 = ABS( LT_RT-BETRG ).
*            -------------------王倩新加工资项
          WHEN '1000'.
            RESULT_PY01-BET1000 = ABS( LT_RT-BETRG ).
          WHEN '1010'.
            RESULT_PY01-BET1010 = ABS( LT_RT-BETRG ).
          WHEN '2000'.
            RESULT_PY01-BET2000 = ABS( LT_RT-BETRG ).
          WHEN '2010'.
            RESULT_PY01-BET2010 = ABS( LT_RT-BETRG ).
          WHEN '2020'.
            RESULT_PY01-BET2020 = ABS( LT_RT-BETRG ).
          WHEN '2030'.
            RESULT_PY01-BET2030 = ABS( LT_RT-BETRG ).
          WHEN '3000'.
            RESULT_PY01-BET3000 = ABS( LT_RT-BETRG ).
          WHEN '3010'.
            RESULT_PY01-BET3010 = ABS( LT_RT-BETRG ).
          WHEN '3020'.
            RESULT_PY01-BET3020 = ABS( LT_RT-BETRG ).
          WHEN '3090'.
            RESULT_PY01-BET3090 = ABS( LT_RT-BETRG ).
          WHEN '3091'.
            RESULT_PY01-BET3091 = ABS( LT_RT-BETRG ).
          WHEN '4000'.
            RESULT_PY01-BET4000 = ABS( LT_RT-BETRG ).
          WHEN '4001'.
            RESULT_PY01-BET4001 = ABS( LT_RT-BETRG ).
          WHEN '4010'.
            RESULT_PY01-BET4010 = ABS( LT_RT-BETRG ).
          WHEN '4020'.
            RESULT_PY01-BET4020 = ABS( LT_RT-BETRG ).
          WHEN '4030'.
            RESULT_PY01-BET4030 = ABS( LT_RT-BETRG ).
          WHEN '4040'.
            RESULT_PY01-BET4040 = ABS( LT_RT-BETRG ).
          WHEN '5000'.
            RESULT_PY01-BET5000 = ABS( LT_RT-BETRG ).
          WHEN '5010'.
            RESULT_PY01-BET5010 = ABS( LT_RT-BETRG ).
          WHEN '6031'.
            RESULT_PY01-BET6031 = ABS( LT_RT-BETRG ).

          WHEN '6032'.
            RESULT_PY01-BET6032 = ABS( LT_RT-BETRG ).
          WHEN '6033'.
            RESULT_PY01-BET6033 = ABS( LT_RT-BETRG ).
          WHEN '6034'.
            RESULT_PY01-BET6034 = ABS( LT_RT-BETRG ).
          WHEN '6035'.
            RESULT_PY01-BET6035 = ABS( LT_RT-BETRG ).
          WHEN '6036'.
            RESULT_PY01-BET6036 = ABS( LT_RT-BETRG ).
          WHEN '6037'.
            RESULT_PY01-BET6037 = ABS( LT_RT-BETRG ).
          WHEN '6038'.
            RESULT_PY01-BET6038 = ABS( LT_RT-BETRG ).
          WHEN  '6041'.
            RESULT_PY01-BET6041 = ABS( LT_RT-BETRG ).
          WHEN '6042'.
            RESULT_PY01-BET6042 = ABS( LT_RT-BETRG ).
          WHEN '5020'.
            RESULT_PY01-BET5020 = ABS( LT_RT-BETRG ).
          WHEN '6000'.
            RESULT_PY01-BET6000 = ABS( LT_RT-BETRG ).
          WHEN '6001'.
            RESULT_PY01-BET6001 = ABS( LT_RT-BETRG ).
          WHEN '6002'.
            RESULT_PY01-BET6002 = ABS( LT_RT-BETRG ).
          WHEN '6003'.
            RESULT_PY01-BET6003 = ABS( LT_RT-BETRG ).
          WHEN '6004'.
            RESULT_PY01-BET6004 = ABS( LT_RT-BETRG ).
          WHEN '6005'.
            RESULT_PY01-BET6005 = ABS( LT_RT-BETRG ).

          WHEN '6010'.
            RESULT_PY01-BET6010 = ABS( LT_RT-BETRG ).
          WHEN '6020'.
            RESULT_PY01-BET6020 = ABS( LT_RT-BETRG ).
          WHEN '7000'.
            RESULT_PY01-BET7000 = ABS( LT_RT-BETRG ).
          WHEN '7010'.
            RESULT_PY01-BET7010 = ABS( LT_RT-BETRG ).
          WHEN '/313'.
            RESULT_PY01-BET313 = ABS( LT_RT-BETRG ).
          WHEN '/314'.
            RESULT_PY01-BET314 = ABS( LT_RT-BETRG ).
          WHEN '/323'.
            RESULT_PY01-BET323 = ABS( LT_RT-BETRG ).
          WHEN '/324'.
            RESULT_PY01-BET324 = ABS( LT_RT-BETRG ).
          WHEN '/333'.
            RESULT_PY01-BET333 = ABS( LT_RT-BETRG ).
          WHEN '/334'.
            RESULT_PY01-BET334 = ABS( LT_RT-BETRG ).
          WHEN '/334'.
            RESULT_PY01-BET334 = ABS( LT_RT-BETRG ).
          WHEN '/343'.
            RESULT_PY01-BET343 = ABS( LT_RT-BETRG ).
          WHEN '/344'.
            RESULT_PY01-BET344 = ABS( LT_RT-BETRG ).
          WHEN '/353'.
            RESULT_PY01-BET353 = ABS( LT_RT-BETRG ).
          WHEN '/354'.
            RESULT_PY01-BET354 = ABS( LT_RT-BETRG ).
          WHEN '/362'.
            RESULT_PY01-BET362 = ABS( LT_RT-BETRG ).
          WHEN '/363'.
            RESULT_PY01-BET363 = ABS( LT_RT-BETRG ).
          WHEN '/391'.
            RESULT_PY01-BET391 = ABS( LT_RT-BETRG ).
          WHEN '/403'.
            RESULT_PY01-BET403 = ABS( LT_RT-BETRG ).
          WHEN '/404'.
            RESULT_PY01-BET404 = ABS( LT_RT-BETRG ).

          WHEN '/559'.
            RESULT_PY01-BET559 = ABS( LT_RT-BETRG ).
          WHEN '/560'.
            RESULT_PY01-BET560 = ABS( LT_RT-BETRG ).
          WHEN '/101'.
            RESULT_PY01-BET101 = ABS( LT_RT-BETRG ).

            CONDENSE RESULT_PY01-FLAG4.
          WHEN OTHERS.
        ENDCASE.
      ENDLOOP.
    ENDLOOP.
    RESULT_PY01-BET101 = RESULT_PY01-BET101 + L_101.
    RESULT_PY01-BET559 = RESULT_PY01-BET559 + L_559.
    RESULT_PY01-BET7000 =   L_7000.
    RESULT_PY01-BET7010 =   L_7010.
    APPEND RESULT_PY01. CLEAR RESULT_PY01.

    LOOP AT RESULT_PY01 WHERE FLAG2 > 0.
      IF RESULT_PY01-FLAG2 <= 3000.    "比例取第一条 0.5
        READ TABLE LT_ZDFJNBL WITH KEY ZXM = 1.
        IF SY-SUBRC = 0.
          RESULT_PY01-FLAG3 = LT_ZDFJNBL-ZBL.
        ENDIF.
      ELSEIF RESULT_PY01-FLAG2 > 3000 AND RESULT_PY01-FLAG2 <= 5000. "比例取第2条1
        READ TABLE LT_ZDFJNBL WITH KEY ZXM = 2.
        IF SY-SUBRC = 0.
          RESULT_PY01-FLAG3 = LT_ZDFJNBL-ZBL.
        ENDIF.
      ELSEIF RESULT_PY01-FLAG2 > 5000 AND RESULT_PY01-FLAG2 <= 10000."比例取第3条 1.5
        READ TABLE LT_ZDFJNBL WITH KEY ZXM = 3.
        IF SY-SUBRC = 0.
          RESULT_PY01-FLAG3 = LT_ZDFJNBL-ZBL.
        ENDIF.
      ELSEIF RESULT_PY01-FLAG2 > 10000.                   "比例取第4条2
        READ TABLE LT_ZDFJNBL WITH KEY ZXM = 4.
        IF SY-SUBRC = 0.
          RESULT_PY01-FLAG3 = LT_ZDFJNBL-ZBL.
        ENDIF.
      ENDIF.
      CONDENSE:RESULT_PY01-FLAG2,RESULT_PY01-FLAG3,RESULT_PY01-FLAG4.
      MODIFY RESULT_PY01.CLEAR RESULT_PY01.
    ENDLOOP.


  ENDIF.
ENDFUNCTION.
